version: '3.8'

services:
  # Core API Service
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/bastion
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-key
      - BLOCKCHAIN_ENDPOINT=http://blockchain:7545
    depends_on:
      - postgres
      - redis
      - blockchain
    volumes:
      - ./services/api:/app
      - /app/node_modules

  # Frontend Web Service
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_GITHUB_CLIENT_ID=your-github-client-id
    depends_on:
      - api
    volumes:
      - ./web:/app
      - /app/node_modules

  # Package Registry Service
  package-registry:
    build:
      context: ./services/package-registry
      dockerfile: Dockerfile
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/bastion
      - STORAGE_PATH=/var/lib/packages
    depends_on:
      - postgres
    volumes:
      - package_storage:/var/lib/packages
      - ./services/package-registry:/app
      - /app/node_modules

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=bastion
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3006:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards

  # Ganache blockchain for development
  blockchain:
    image: trufflesuite/ganache:latest
    ports:
      - "7545:8545"
    command: >
      --server.host 0.0.0.0
      --accounts 10
      --deterministic
      --mnemonic "candy maple cake sugar pudding cream honey rich smooth crumble sweet treat"

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  package_storage:
